{"ast":null,"code":"var _jsxFileName = \"/Users/rajmohan/Desktop/Personal/Impact-related/impact-related/product_101/src/components/ToolsRequiredComponent.jsx\";\nimport React, { Component } from \"react\";\nimport HowManyDevelopers from \"../Images/HowManyDevelopers.png\";\nimport ArchitectureDiagram from \"../Images/ArchitectureDiagram.png\";\nimport { Element, animateScroll as scroll } from \"react-scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToolsRequiredComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showArchitecture: false,\n      showToolsRequired: false\n    };\n  }\n\n  render() {\n    let toolsReqArray = [{\n      heading: \"UX-related tool\",\n      labels: [\"Adobe XD\"],\n      urls: [\"https://xd.adobe.com/view/815061c2-31b7-42fe-bbf8-96f7a0129e72-d403/\"]\n    }, {\n      heading: \"Sprint related tool\",\n      labels: [\"Jira\"],\n      urls: [\"https://impactanalytics.atlassian.net/secure/RapidBoard.jspa?rapidView=6&projectKey=GAS\"]\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.showArchitecture ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Architecture diagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How many developers do I need?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.showArchitecture ? ArchitectureDiagram : HowManyDevelopers,\n          width: \"1200\",\n          className: \"border\",\n          alt: \"Product pie chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-primary mt-2\",\n        onClick: () => {\n          scroll.scrollToBottom();\n\n          if (this.state.showArchitecture) {\n            this.setState({\n              showToolsRequired: true\n            });\n          } else {\n            this.setState({\n              showArchitecture: true\n            });\n          }\n        },\n        children: this.state.showArchitecture ? `Tools Required` : `Architecture view!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), this.state.showToolsRequired ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: toolsReqArray.map((toolsData, index) => {\n          console.log(toolsData, \"toolsData\", toolsData.heading);\n\n          /*#__PURE__*/\n          _jsxDEV(\"h1\", {\n            children: [\" \", toolsData.heading]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this); // <div className=\"row\">\n          //   <div className=\"col-md-3\">{Object.keys(toolsData)[0]}</div>\n          //   {/* <div\n          //     class=\"hexagon ml-2\"\n          //     onClick={() => {\n          //       window.open(Object.keys(toolsData)[0].urls, \"_blank\");\n          //     }}\n          //   >\n          //     <div class=\"text-in-hexagon \">\n          //       <h1>{Object.keys(toolsData)[0].labels}</h1>\n          //     </div>\n          //   </div> */}\n          // </div>;\n\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ToolsRequiredComponent;","map":{"version":3,"sources":["/Users/rajmohan/Desktop/Personal/Impact-related/impact-related/product_101/src/components/ToolsRequiredComponent.jsx"],"names":["React","Component","HowManyDevelopers","ArchitectureDiagram","Element","animateScroll","scroll","ToolsRequiredComponent","constructor","props","state","showArchitecture","showToolsRequired","render","toolsReqArray","heading","labels","urls","scrollToBottom","setState","map","toolsData","index","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,SAASC,OAAT,EAAkBC,aAAa,IAAIC,MAAnC,QAAiD,cAAjD;;;AAEA,MAAMC,sBAAN,SAAqCN,SAArC,CAA+C;AAC7CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,KADP;AAEXC,MAAAA,iBAAiB,EAAE;AAFR,KAAb;AAID;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAa,GAAG,CAClB;AACEC,MAAAA,OAAO,EAAE,iBADX;AAEEC,MAAAA,MAAM,EAAE,CAAC,UAAD,CAFV;AAGEC,MAAAA,IAAI,EAAE,CACJ,sEADI;AAHR,KADkB,EAQlB;AACEF,MAAAA,OAAO,EAAE,qBADX;AAEEC,MAAAA,MAAM,EAAE,CAAC,MAAD,CAFV;AAGEC,MAAAA,IAAI,EAAE,CACJ,yFADI;AAHR,KARkB,CAApB;AAgBA,wBACE;AAAA,iBACG,KAAKP,KAAL,CAAWC,gBAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAME;AAAA,+BACE;AACE,UAAA,GAAG,EACD,KAAKD,KAAL,CAAWC,gBAAX,GACIR,mBADJ,GAEID,iBAJR;AAME,UAAA,KAAK,EAAC,MANR;AAOE,UAAA,SAAS,EAAC,QAPZ;AAQE,UAAA,GAAG,EAAC;AARN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAkBE;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbI,UAAAA,MAAM,CAACY,cAAP;;AACA,cAAI,KAAKR,KAAL,CAAWC,gBAAf,EAAiC;AAC/B,iBAAKQ,QAAL,CAAc;AACZP,cAAAA,iBAAiB,EAAE;AADP,aAAd;AAGD,WAJD,MAIO;AACL,iBAAKO,QAAL,CAAc;AACZR,cAAAA,gBAAgB,EAAE;AADN,aAAd;AAGD;AACF,SAbH;AAAA,kBAeG,KAAKD,KAAL,CAAWC,gBAAX,GACI,gBADJ,GAEI;AAjBP;AAAA;AAAA;AAAA;AAAA,cAlBF,EAsCG,KAAKD,KAAL,CAAWE,iBAAX,gBACC;AAAA,kBACGE,aAAa,CAACM,GAAd,CAAkB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACvCC,UAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuB,WAAvB,EAAoCA,SAAS,CAACN,OAA9C;;AACA;AAAA;AAAA,4BAAMM,SAAS,CAACN,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFuC,CAGvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,SAhBA;AADH;AAAA;AAAA;AAAA;AAAA,cADD,GAoBG,IA1DN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8DD;;AAvF4C;;AA0F/C,eAAeR,sBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport HowManyDevelopers from \"../Images/HowManyDevelopers.png\";\nimport ArchitectureDiagram from \"../Images/ArchitectureDiagram.png\";\nimport { Element, animateScroll as scroll } from \"react-scroll\";\n\nclass ToolsRequiredComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showArchitecture: false,\n      showToolsRequired: false,\n    };\n  }\n  render() {\n    let toolsReqArray = [\n      {\n        heading: \"UX-related tool\",\n        labels: [\"Adobe XD\"],\n        urls: [\n          \"https://xd.adobe.com/view/815061c2-31b7-42fe-bbf8-96f7a0129e72-d403/\",\n        ],\n      },\n      {\n        heading: \"Sprint related tool\",\n        labels: [\"Jira\"],\n        urls: [\n          \"https://impactanalytics.atlassian.net/secure/RapidBoard.jspa?rapidView=6&projectKey=GAS\",\n        ],\n      },\n    ];\n    return (\n      <div>\n        {this.state.showArchitecture ? (\n          <h2>Architecture diagram</h2>\n        ) : (\n          <h2>How many developers do I need?</h2>\n        )}\n        <div>\n          <img\n            src={\n              this.state.showArchitecture\n                ? ArchitectureDiagram\n                : HowManyDevelopers\n            }\n            width=\"1200\"\n            className=\"border\"\n            alt=\"Product pie chart\"\n          />\n        </div>\n        <button\n          className=\"button-primary mt-2\"\n          onClick={() => {\n            scroll.scrollToBottom();\n            if (this.state.showArchitecture) {\n              this.setState({\n                showToolsRequired: true,\n              });\n            } else {\n              this.setState({\n                showArchitecture: true,\n              });\n            }\n          }}\n        >\n          {this.state.showArchitecture\n            ? `Tools Required`\n            : `Architecture view!`}\n        </button>\n\n        {this.state.showToolsRequired ? (\n          <div>\n            {toolsReqArray.map((toolsData, index) => {\n              console.log(toolsData, \"toolsData\", toolsData.heading);\n              <h1> {toolsData.heading}</h1>;\n              // <div className=\"row\">\n              //   <div className=\"col-md-3\">{Object.keys(toolsData)[0]}</div>\n              //   {/* <div\n              //     class=\"hexagon ml-2\"\n              //     onClick={() => {\n              //       window.open(Object.keys(toolsData)[0].urls, \"_blank\");\n              //     }}\n              //   >\n              //     <div class=\"text-in-hexagon \">\n              //       <h1>{Object.keys(toolsData)[0].labels}</h1>\n              //     </div>\n              //   </div> */}\n              // </div>;\n            })}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ToolsRequiredComponent;\n"]},"metadata":{},"sourceType":"module"}